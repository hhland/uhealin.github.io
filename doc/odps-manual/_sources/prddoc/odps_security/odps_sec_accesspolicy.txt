.. _odps_sec_accesspolicy:

访问策略语言
=================

基本术语
----------
权限(Permission)是访问控制的一个基本概念，它表示允许或拒绝一个请求者(Requester)对资源(Resource)执行某种操作(Action)。我们用语句(Statement)来表示单个权限的形式化描述，而用策略(Policy)来表示语句的集合。

访问策略(Access Policy)主要包括如下的访问控制元素：主体(Principal)、操作(Action)、资源(Resource)、访问限制(Access Restriction)和效果(Effect)。下面分别对这几个基本实体进行简要描述。

主体(Principal)
~~~~~~~~~~~~~~~
主体(Principal)是指访问策略中的权限被指派的对象。比如，访问策略"允许张三在2011年12月31日之前对资源SampleBucket执行CreateObject操作"中的主体是"张三"。

操作(Action)
~~~~~~~~~~~~~~
操作(Action)是指主体对资源的访问方法。比如，访问策略"允许张三在2011年12月31日之前对资源SampleBucket执行CreateObject操作"中的操作是"CreateObject"。

资源(Resource)
~~~~~~~~~~~~~~
资源(Resource)是指主体请求访问的对象。比如，访问策略"允许张三在2011年12月31日之前对资源SampleBucket执行CreateObject操作"中的资源是"SampleBucket"。

访问限制(Access Restriction)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
访问限制(Access Restriction)是指权限生效的限制条件。比如，访问策略"允许张三在2011年12月31日之前对资源SampleBucket执行CreateObject操作"中的限制条件是"在2011年12月31日之前"。

效力(Effect)
~~~~~~~~~~~~~~
授权效力包括两个方面：允许操作（Allow）和拒绝操作（Deny）。通常，Deny有更高的效力，在权限检查时会优先使用。注意，拒绝操作和"撤销授权"是完全独立的两个概念，撤销授权通常包括撤销对Allow和Deny这两种不同效力的授权，比如传统数据库一般支持Revoke和Revoke Deny两种操作。

访问策略语言结构
-----------------
下图描述了访问策略的基本结构。一个策略(Policy)由以下部分组成：(1) 可选的策略头部元素；(2) 一条或多条语句(Statement)。策略头部元素是可选的，它主要包括策略的版本信息。策略的主体是语句的集合。

::

 Policy结构：
 +---------------------------------+
 |                                 |
 | +-----------------------------+ |
 | | Optional top-level elements | |
 | +-----------------------------+ |
 |            +-----------+        |
 |            | Statement |        |
 |            +-----------+        |
 |                                 |
 |            +-----------+        |
 |            | Statement |        |
 |            +-----------+        |
 |                                 |
 |            +-----------+        |
 |            | Statement |        |
 |            +-----------+        |
 |                                 |
 +---------------------------------+

 Statement结构：
  +-----------------+
  | Effect          |
  +-----------------+
  | Principal       |
  +-----------------+
  | Action          |
  +-----------------+
  | Resource        |
  +-----------------+
  | Condition Block |
  +-----------------+

授权语句(Statement)结构
~~~~~~~~~~~~~~~~~~~~~~~~~~~

一条授权语句(Statement)包括如下条目：

* Effect: 指明该条语句的权限类型，取值必须为Allow或Deny。
* Principal: 如果Policy在授权时是与用户或角色绑定，那么就不允许再指定Principal，比如ODPS的Role Policy。如果Policy在授权时是与项目空间或项目空间内的对象绑定，那么必须指定Principal，比如ODPS的Project Policy。
* Action: 它表示授权操作，可以是一个或多个操作名，可支持通配符号"*"和"?"。例如，Action = "*" 表示所有的操作。
* Resource: 它表示授权对象，可以是一个或多个对象名，可支持通配符号"*"和"?"。例如Resource = "*" 表示所有的对象。
* Condition Block: 条件块是该条授权语句所述权限得以生效的条件。条件块结构请参见下节的描述。


.. _odps_sec_accesspolicy_condition:

条件块结构
~~~~~~~~~~~~~~~~~~

条件块由一个或多个条件子句构成。一个条件子句由条件操作类型、条件关键字和条件值组成。条件操作类型和条件关键字在下文中会有详细描述。

条件块的满足性判断原则如下图所示。描述如下：(1) 一个条件关键字可以指定一个或多个值，在条件检查时，如果条件关键字的值与指定值中的某一个相等，即可判定条件满足。(2) 同一种条件操作类型的条件子句下的多个条件关键字同时满足的情况下，才能判定该条件子句满足。(3) 条件块下的所有条件子句同时满足的情况下，才能判定该条件块满足。

::

 条件块判断逻辑

     +----------------------------------------+
     | Condition 1:                           |
  +--|    key1: value1a OR value1b OR value1c |
  |  | AND                                    |
  |  |    key2: value2a OR value2b            |
  |  +----------------------------------------+
 AND
  |  +----------------------------------------+
  |  | Condition 2:                           |
  +--|    key3: value3                        |
     +----------------------------------------+

条件操作类型
~~~~~~~~~~~~~~~~

我们支持如下条件操作类型：字符串类型、数字类型、日期类型、布尔类型和IP地址类型。每种条件操作类型分别支持如下的方法：

String
 * StringEquals
 * StringNotEquals
 * StringEqualsIgnoreCase
 * StringNotEqualsIgnoreCase
 * StringLike
 * StringNotLike

Numeric 
 * NumericEquals
 * NumericEquals
 * NumericLessThan
 * NumericLessThanEquals
 * NumericGreaterThan
 * NumericGreaterThanEquals

Date and time
 * DateEquals
 * DateNotEquals
 * DateLessThan
 * DateLessThanEquals
 * DateGreaterThan
 * DateGreaterThanEquals

Boolean
 * Bool

IP address 
 * IpAddress
 * NotIpAddress

条件关键字
~~~~~~~~~~~~~~~~

首先，ODPS支持开放云服务ACS (Aliyun Cloud Service) 保留的如下条件关键字：

+---------------------+---------------+------------------------------------------------------------------------+
| ACS保留条件关键字   | 类型          | 说明                                                                   |
+=====================+===============+========================================================================+
| acs:CurrentTime     | Date and time | Web Server接收到请求的时间，以ISO 8601格式表示，如2012-11-11T23:59:59Z |
+---------------------+---------------+------------------------------------------------------------------------+
| acs:SecureTransport | Boolean       | 发送请求是否使用了安全信道，如HTTPS                                    |
+---------------------+---------------+------------------------------------------------------------------------+
| acs:SourceIp        | IP address    | 发送请求时的客户端IP地址                                               |
+---------------------+---------------+------------------------------------------------------------------------+
| acs:UserAgent       | String        | 发送请求时的客户端UserAgent                                            |
+---------------------+---------------+------------------------------------------------------------------------+
| acs:Referer         | String        | 发送请求时的HTTP referer                                               |
+---------------------+---------------+------------------------------------------------------------------------+

此外，ODPS新增了如下的条件关键字：

+--------------------+------------+----------------------------------------------------------------------------+
| ODPS扩展条件关键字 | 类型       | 说明                                                                       |
+====================+============+============================================================================+
| odps:TaskType      | String     | ODPS任务类型。目前支持的任务类型有：SQL, MR, DT                            |
+--------------------+------------+----------------------------------------------------------------------------+
| dt:SourceType      | String     | ODPS DT Task 数据源类型。目前支持的数据源类型有：odps, file, oracle, mysql |
+--------------------+------------+----------------------------------------------------------------------------+
| dt:SourceIp        | IP address | ODPS DT Task 数据源IP地址                                                  |
+--------------------+------------+----------------------------------------------------------------------------+
| dt:SourceResource  | String     | ODPS DT Task 数据源对象，参考 Resource命名规范                             |
+--------------------+------------+----------------------------------------------------------------------------+
| dt:TargetType      | String     | ODPS DT Task 目标类型。目前支持的目标类型有：odps, file, oracle, mysql     |
+--------------------+------------+----------------------------------------------------------------------------+
| dt:TargetIp        | IP address | ODPS DT Task 目标IP地址                                                    |
+--------------------+------------+----------------------------------------------------------------------------+
| dt:TargetResource  | String     | ODPS DT Task 目标对象，参考 Resource命名规范                               |
+--------------------+------------+----------------------------------------------------------------------------+

.. note::

 * acs:SourceIp是指http connection的remote_ip，而不是http header中的 "x-forwarded-for" 所指的ip list中的ip。举例来说，如果10.230.205.105是一个局域网Ip，acs:SourceIp则为该网络的网关出口Ip。如果该网络出口使用了代理服务器，那么acs:SourceIp为该代理服务器Ip；如果有多级代理服务器，则为最后一级代理服务器Ip。如果代理服务器设置的代理规则不同，那么对acs:SourceIp的值也有影响。

访问策略语言规范
----------------

Principal命名规范
~~~~~~~~~~~~~~~~~~
Principal是指请求发送者的身份。目前仅支持阿里云帐号、域账号和淘宝账号的身份表示。对于云账号，可以支持ID或DisplayName的表示。比如：

::

 "Principal": "43274"
 "Principal": "ALIYUN$jun.li@aliyun.com"
 "Principal": ["ALIYUN$jun.li@aliyun.com","ALIYUN$jack@aliyun.com", "TAOBAO$alice"]

Resource命名规范
~~~~~~~~~~~~~~~~
我们使用如下格式来命名odps所提供的资源。格式如下：

::

 acs:<service-name>:<namespace>:<relative-id>

.. note::

 * acs: 保留的Resource头部。
 * service-name: 阿里云开放服务名称，如odps, oss, ots等。
 * namespace: 命名空间，用于资源隔离。如果以云帐号ID来做资源隔离，那么可取值为云帐号ID。如果不支持该项，可以使用通配符"*"号来代替。
 * relative-id: 与service相关的资源描述部分，其语义由具体service指定。这部分的格式描述支持类似于文件路径的树状结构。以odps为例，relative-id的格式为：projects/<project_name>/<object_type>/<object_name>。

ODPS Resource命名样例:

+-------------------------------+-------------------------------------------------+
| Resource命名实例              | 说明                                            |
+===============================+=================================================+
| \*                            | 项目空间中的所有对象                            |
+-------------------------------+-------------------------------------------------+
| projects/prj1/tables/t1       | 项目空间prj1中的t1表                            |
+-------------------------------+-------------------------------------------------+
| projects/prj1/instances/*     | 项目空间prj1中的所有的instances                 |
+-------------------------------+-------------------------------------------------+
| projects/prj1/tables/*        | 项目空间prj1中的所有表                          |
+-------------------------------+-------------------------------------------------+
| projects/prj1/tables/taobao* | 项目空间prj1中的所有以 taobao 开头的表           |
+-------------------------------+-------------------------------------------------+

Action命名规范
~~~~~~~~~~~~~~~~
Action命名规范如下：

::

 <service-name>:<action-name>

.. note::

 * service-name: 开放服务名称，如odps, oss, ots等。
 * action-name: service相关的操作接口名称。

ODPS Action命名样例:

+-------------------+-------------------------------------------------+
| Action命名实例    | 说明                                            |
+===================+=================================================+
| \*                | 所有操作                                        |
+-------------------+-------------------------------------------------+
| odps:*            | ODPS的所有操作                                  |
+-------------------+-------------------------------------------------+
| odps:CreateTable  | ODPS的CreateTable操作                           |
+-------------------+-------------------------------------------------+
| odps:Create*      | ODPS的所有以Create开头的操作                    |
+-------------------+-------------------------------------------------+

Condition Keys命名规范
~~~~~~~~~~~~~~~~~~~~~~~~~~~
开放云服务ACS保留的条件关键字命名格式为：

::

 acs:<condition-key>

.. note::

 * condition-key: ACS保留了5种条件关键字，所有的开放服务可以共用。它们是：acs:CurrentTime, acs:SecureTransport, acs:SourceIp, acs:UserAgent, acs:Referer。

具体服务相关的条件关键字的命名格式为：

::

 <service-name>:<condition-key>

.. note::

 * condition-key: service自定义的条件关键字。

访问策略样例
~~~~~~~~~~~~~~

Policy Sample:

.. code-block:: java 

 {
 "Version": "1",
 "Statement":
  [{
     "Effect":"Allow",
     "Principal":"ALIYUN$alice@aliyun.com",
     "Action":["odps:CreateTable","odps:CreateInstance","odps:List"],
     "Resource":"acs:odps:*:projects/prj1",
     "Condition":{
         "DateLessThan": {
             "acs:CurrentTime":"2013-11-11T23:59:59Z"
         },
         "IpAddress": {
             "acs:SourceIp":"10.32.180.0/23"
         }
     }
 },
 {
     "Effect":"Deny",
     "Principal":"ALIYUN$alice@aliyun.com",
     "Action":"odps:Drop",
     "Resource":"acs:odps:*:projects/prj1/tables/*"
 }]
 } 

解释：授权用户alice@aliyun.com只能在"2013-11-11T23:59:59Z"这个时间点之前、只能从"10.32.180.0/23"这个IP段提交请求，只允许在项目空间prj1中执行CreateInstance, CreateTable和 List操作，禁止删除prj1下的任何table。

