.. _odps_mr_resource_set:

资源使用示例
----------------------------------------------------------------------------------------
用户可以在MapReduce中读取 :ref:`odps_common_resource` ，供Map/Reduce函数使用。但有如下限制：

* 单个任务引用的资源数量不超过256个，table按照一个单位计算.
* 单个任务引用的资源总计字节数大小不超过512M.

更多MapReduce使用限制请参考 :ref:`odps_mr_restriction` 。

代码示例，仅供参考：

* 在代码第36行中，map函数读取资源，而该资源名即是JobConf中变量import.filename的值，并在后面的代>码中对这个资源的内容作了处理。
* 在代码第80行中，main函数通过jar命令的第1个参数获取import.filename的值，即在map函数中读取的资源的名称。


.. code-block:: java
 :linenos:

  package com.aliyun.odps.mapred.open.example;
  
  import java.io.BufferedInputStream;
  import java.io.FileNotFoundException;
  import java.io.IOException;
  
  
  import com.aliyun.odps.data.Record;
  import com.aliyun.odps.data.TableInfo;
  import com.aliyun.odps.mapred.JobClient;
  import com.aliyun.odps.mapred.MapperBase;
  import com.aliyun.odps.mapred.TaskContext;
  import com.aliyun.odps.mapred.conf.JobConf;
  import com.aliyun.odps.mapred.utils.InputUtils;
  import com.aliyun.odps.mapred.utils.OutputUtils;
  import com.aliyun.odps.mapred.utils.SchemaUtils;
  
  /**
   * Upload
   * 
   * Import data from text file into table
   * 
   * To run: jar -resources odps-mapred-example-0.12.0.jar,mr_join_src1.txt 
   * com.aliyun.odps.mapred.open.example.Upload mr_join_src1.txt mr_join_src1;
   * 
   **/
  public class Upload {
  
    public static class UploadMapper extends MapperBase {
      @Override
      public void setup(TaskContext context) throws IOException {
        Record record = context.createOutputRecord();
        StringBuilder importdata = new StringBuilder();
        BufferedInputStream bufferedInput = null;
  
        try {
          byte[] buffer = new byte[1024];
          int bytesRead = 0;
  
          String filename = context.getJobConf().get("import.filename");
          bufferedInput = context.readResourceFileAsStream(filename);
  
          while ((bytesRead = bufferedInput.read(buffer)) != -1) {
            String chunk = new String(buffer, 0, bytesRead);
            importdata.append(chunk);
          }
  
          String lines[] = importdata.toString().split("\n");
          for (int i = 0; i < lines.length; i++) {
            String[] ss = lines[i].split(",");
            record.set(0, Long.parseLong(ss[0].trim()));
            record.set(1, ss[1].trim());
            context.write(record);
          }
        } catch (FileNotFoundException ex) {
          throw new IOException(ex);
        } catch (IOException ex) {
          throw new IOException(ex);
        } finally {
        }
  
      }
  
      @Override
      public void map(long recordNum, Record record, TaskContext context)
          throws IOException {
  
      }
  
    }
  
    public static void main(String[] args) throws Exception {
      if (args.length != 2) {
        System.err.println("Usage: Upload <import_txt> <out_table>");
        System.exit(2);
      }
  
      JobConf job = new JobConf();
  
      job.setMapperClass(UploadMapper.class);
  
      job.set("import.filename", args[0]);
  
      job.setNumReduceTasks(0);
  
      job.setMapOutputKeySchema(SchemaUtils.fromString("key:bigint"));
      job.setMapOutputValueSchema(SchemaUtils.fromString("value:string"));
  
      InputUtils.addTable(TableInfo.builder().tableName("mr_empty").build(), job);
      OutputUtils.addTable(TableInfo.builder().tableName(args[1]).build(), job);
  
      JobClient.runJob(job);
    }
  
  }



实际上用户有多种手段设置JobConf：

* 通过SDK中JobConf的接口设置，本示例即是通过此方法。此方法的优先级最高；
* 在jar命令行中通过--conf参数指定新的JobConf文件。此种方式的优先级最低。--conf的使用方式请参考 :ref:`odps_openmr_jar` ；

